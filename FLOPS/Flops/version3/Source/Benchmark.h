/* Benchmark.h
 * 
 * Author           : Alexander J. Yee
 * Date Created     : 03/27/2017
 * Last Modified    : 03/27/2017
 * 
 */

#ifndef _flops_Benchmark_H
#define _flops_Benchmark_H
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
//  Dependencies
#include <stdint.h>
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
struct Result{
    double flops;
    double sum;
};
class Benchmark{
public:
    Benchmark(uint64_t flops_per_iteration);

    Result bench(double seconds);
    Result bench(double seconds, size_t threads);

    void run(const char* label, size_t threads, double seconds = 4);

protected:
    virtual double run_kernel(size_t iterations) const = 0;

private:
    class BenchThread;

    const uint64_t m_flops_per_iteration;
    const size_t m_block_size;
};
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
#endif
